{"ast":null,"code":"import _asyncToGenerator from \"C:/Code/Bidfood/Project1/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserRegistrationService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n  }\n\n  userRegistration(requestData) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var response = false;\n      yield _this.http.post(_this.baseUrl + 'userregistration', requestData).subscribe(() => {\n        response = true;\n      }, () => {\n        response = false;\n      });\n      return response;\n    })();\n  }\n\n}\n\nUserRegistrationService.ɵfac = function UserRegistrationService_Factory(t) {\n  return new (t || UserRegistrationService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\n\nUserRegistrationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserRegistrationService,\n  factory: UserRegistrationService.ɵfac\n});","map":{"version":3,"mappings":";;;AAIA,OAAM,MAAOA,uBAAP,CAA8B;EAElCC,YAAoBC,IAApB,EAAkEC,OAAlE,EAAiF;IAA7D;IAA8C;EACjE;;EAEKC,gBAAgB,CAACC,WAAD,EAAiB;IAAA;;IAAA;MACrC,IAAIC,QAAQ,GAAG,KAAf;MAEA,MAAM,KAAI,CAACJ,IAAL,CAAUK,IAAV,CAAe,KAAI,CAACJ,OAAL,GAAe,kBAA9B,EAAkDE,WAAlD,EAA+DG,SAA/D,CAAyE,MAAK;QAClFF,QAAQ,GAAG,IAAX;MACD,CAFK,EAEH,MAAK;QACNA,QAAQ,GAAG,KAAX;MACD,CAJK,CAAN;MAMA,OAAOA,QAAP;IATqC;EAUtC;;AAfiC;;;mBAAvBN,yBAAuBS,wCAEY,UAFZ;AAEsB;;;SAF7CT;EAAuBU,SAAvBV,uBAAuB","names":["UserRegistrationService","constructor","http","baseUrl","userRegistration","requestData","response","post","subscribe","i0","factory"],"sourceRoot":"","sources":["C:\\Code\\Bidfood\\Project1\\ClientApp\\src\\app\\user-registration\\user-registration-service.ts"],"sourcesContent":["import { Inject, Injectable } from \"@angular/core\";\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class UserRegistrationService {\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\r\n  }\r\n\r\n  async userRegistration(requestData: any): Promise<boolean> {\r\n    var response = false;\r\n\r\n    await this.http.post(this.baseUrl + 'userregistration', requestData).subscribe(() => {\r\n      response = true;\r\n    }, () => {\r\n      response = false;\r\n    });\r\n\r\n    return response;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}